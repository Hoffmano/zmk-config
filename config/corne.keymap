/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt { tapping-term-ms = <300>; };

&mt {
    tapping-term-ms = <300>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        to_to: to_to {
            compatible = "zmk,behavior-hold-tap";
            label = "TO_TO";
            bindings = <&to>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
        };

        layer_dance: layer_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_DANCE";
            #binding-cells = <0>;
            bindings = <&to_to 1 0>, <&to 2>, <&to 4>;
        };
    };

    combos {
        compatible = "zmk,combos";

        kl {
            bindings = <&to 4>;
            key-positions = <37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        letters {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W           &kp E             &kp R             &kp T           &kp Y   &kp U             &kp I        &kp O            &kp P          &kp APOS
&kp LEFT_SHIFT    &kp A  &mt LEFT_ALT S  &mt LEFT_SHIFT D  &mt LEFT_SHIFT F  &kp G           &kp H   &mt LEFT_SHIFT J  &mt RCTRL K  &mt RIGHT_ALT L  &kp BACKSPACE  &kp CARET
&kp LEFT_CONTROL  &kp Z  &kp X           &kp C             &kp V             &kp B           &kp N   &kp M             &kp COMMA    &mt SEMI PERIOD  &kp ENTER      &kp QUESTION
                                         &kp ESC           &kp LGUI          &layer_dance    &trans  &kp SPACE         &trans
            >;
        };

        special {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT       &kp EXCLAMATION  &kp LBRC   &kp RBRC  &trans       &kp MINUS  &kp PLUS
&kp LCTRL  &trans    &trans  &trans    &trans    &trans          &kp QMARK        &kp LPAR   &kp RPAR  &kp PERCENT  &kp BSLH   &kp STAR
&kp LSHFT  &trans    &trans  &trans    &trans    &trans          &kp UNDER        &kp LBKT   &kp RBKT  &trans       &kp DOT    &kp COMMA
                             &kp ESC   &to 2     &layer_dance    &kp RET          &kp EQUAL  &kp RALT
            >;
        };

        number {
            bindings = <
&trans  &trans  &trans  &trans  &trans                &trans                   &trans     &kp N7        &kp N8        &kp N9        &kp MINUS   &kp PLUS
&trans  &trans  &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &trans     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SLASH   &kp ASTERISK
&trans  &trans  &trans  &trans  &trans                &trans                   &trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &kp PERIOD
                        &trans  &trans                &layer_dance             &kp ENTER  &kp EQUAL     &kp N0
            >;
        };

        i3wm {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &layer_dance    &trans  &trans  &trans
            >;
        };

        keyboard {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&sys_reset  &bootloader   &kp LCTRL     &kp LCTRL     &kp LCTRL     &kp LCTRL       &kp LCTRL  &kp LCTRL  &kp LCTRL  &kp LCTRL  &kp LCTRL  &kp LCTRL
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LCTRL  &kp LCTRL  &kp LCTRL  &kp LCTRL  &kp LCTRL  &kp LCTRL
&trans      &kp LCTRL     &kp LCTRL     &kp LCTRL     &kp LCTRL     &kp LCTRL       &kp LCTRL  &kp LCTRL  &kp LCTRL  &kp LCTRL  &kp LCTRL  &kp LCTRL
                                        &kp LCTRL     &kp LCTRL     &layer_dance    &kp LCTRL  &kp LCTRL  &kp LCTRL
            >;
        };
    };
};
